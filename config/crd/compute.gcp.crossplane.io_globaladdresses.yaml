
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: globaladdresses.compute.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=='Ready')].status
    name: READY
    type: string
  - JSONPath: .status.conditions[?(@.type=='Synced')].status
    name: SYNCED
    type: string
  group: compute.gcp.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: GlobalAddress
    listKind: GlobalAddressList
    plural: globaladdresses
    singular: globaladdress
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A GlobalAddress is a managed resource that represents a Google
        Compute Engine Global Address.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A GlobalAddressSpec defines the desired state of a GlobalAddress.
          properties:
            claimRef:
              description: ClaimReference specifies the resource claim to which this
                managed resource will be bound. ClaimReference is set automatically
                during dynamic provisioning. Crossplane does not currently support
                setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/19
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            classRef:
              description: ClassReference specifies the resource class that was used
                to dynamically provision this managed resource, if any. Crossplane
                does not currently support setting this field manually, per https://github.com/crossplane/crossplane-runtime/issues/20
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            forProvider:
              description: 'GlobalAddressParameters define the desired state of a
                Google Compute Engine Global Address. Most fields map directly to
                an Address: https://cloud.google.com/compute/docs/reference/rest/v1/globalAddresses'
              properties:
                address:
                  description: 'Address: The static IP address represented by this
                    resource.'
                  type: string
                addressType:
                  description: "AddressType: The type of address to reserve, either
                    INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL. \n
                    Possible values:   \"EXTERNAL\"   \"INTERNAL\"   \"UNSPECIFIED_TYPE\""
                  enum:
                  - EXTERNAL
                  - INTERNAL
                  - UNSPECIFIED_TYPE
                  type: string
                description:
                  description: 'Description: An optional description of this resource.'
                  type: string
                ipVersion:
                  description: "IPVersion: The IP version that will be used by this
                    address. Valid options are IPV4 or IPV6. \n Possible values:   \"IPV4\"
                    \  \"IPV6\"   \"UNSPECIFIED_VERSION\""
                  enum:
                  - IPV6
                  - IPV4
                  - UNSPECIFIED_VERSION
                  type: string
                network:
                  description: 'Network: The URL of the network in which to reserve
                    the address. This field can only be used with INTERNAL type with
                    the VPC_PEERING purpose.'
                  type: string
                networkRef:
                  description: NetworkRef references a Network to retrieve its URI
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                networkSelector:
                  description: NetworkSelector selects a reference to a Network
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
                prefixLength:
                  description: 'PrefixLength: The prefix length if the resource represents
                    an IP range.'
                  format: int64
                  type: integer
                purpose:
                  description: "Purpose: The purpose of this resource, which can be
                    one of the following values: - `GCE_ENDPOINT` for addresses that
                    are used by VM instances, alias IP ranges, internal load balancers,
                    and similar resources. - `DNS_RESOLVER` for a DNS resolver address
                    in a subnetwork - `VPC_PEERING` for addresses that are reserved
                    for VPC peer networks. - `NAT_AUTO` for addresses that are external
                    IP addresses automatically reserved for Cloud NAT. \n Possible
                    values:   \"DNS_RESOLVER\"   \"GCE_ENDPOINT\"   \"NAT_AUTO\"   \"VPC_PEERING\""
                  enum:
                  - DNS_RESOLVER
                  - GCE_ENDPOINT
                  - NAT_AUTO
                  - VPC_PEERING
                  type: string
                subnetwork:
                  description: 'Subnetwork: The URL of the subnetwork in which to
                    reserve the address. If an IP address is specified, it must be
                    within the subnetwork''s IP range. This field can only be used
                    with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER purpose.'
                  type: string
                subnetworkRef:
                  description: SubnetworkRef references a Subnetwork to retrieve its
                    URI
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                  required:
                  - name
                  type: object
                subnetworkSelector:
                  description: SubnetworkSelector selects a reference to a Subnetwork
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                  type: object
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete this managed resource.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to this managed
                resource when its resource claim is deleted, and what will happen
                to the underlying external resource when the managed resource is deleted.
                The "Delete" policy causes the managed resource to be deleted when
                its bound resource claim is deleted, and in turn causes the external
                resource to be deleted when its managed resource is deleted. The "Retain"
                policy causes the managed resource to be retained, in binding phase
                "Released", when its resource claim is deleted, and in turn causes
                the external resource to be retained when its managed resource is
                deleted. The "Retain" policy is used when no policy is specified.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          - providerRef
          type: object
        status:
          description: A GlobalAddressStatus represents the observed state of a GlobalAddress.
          properties:
            atProvider:
              description: A GlobalAddressObservation reflects the observed state
                of a GlobalAddress on GCP.
              properties:
                creationTimestamp:
                  description: CreationTimestamp in RFC3339 text format.
                  type: string
                id:
                  description: ID for the resource. This identifier is defined by
                    the server.
                  format: int64
                  type: integer
                selfLink:
                  description: 'SelfLink: Server-defined URL for the resource.'
                  type: string
                status:
                  description: "Status of the address, which can be one of RESERVING,
                    RESERVED, or IN_USE. An address that is RESERVING is currently
                    in the process of being reserved. A RESERVED address is currently
                    reserved and available to use. An IN_USE address is currently
                    being used by another resource and is not available. \n Possible
                    values:   \"IN_USE\"   \"RESERVED\"   \"RESERVING\""
                  type: string
                users:
                  description: Users that are using this address.
                  items:
                    type: string
                  type: array
              type: object
            bindingPhase:
              description: Phase represents the binding phase of a managed resource
                or claim. Unbindable resources cannot be bound, typically because
                they are currently unavailable, or still being created. Unbound resource
                are available for binding, and Bound resources have successfully bound
                to another resource.
              enum:
              - Unbindable
              - Unbound
              - Bound
              - Released
              type: string
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
